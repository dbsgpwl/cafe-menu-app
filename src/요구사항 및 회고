//step1 카페의 에스프레소 메뉴판 만들기
// TODO 메뉴 추가
// - [x] 메뉴의 이름을 입력 받고 엔터키 입력으로 추가한다.
// - [x] 메뉴의 이름을 입력 받고 확인 버튼을 클릭하면 메뉴를 추가한다.
// - [x] 추가되는 메뉴의 마크업은 `<ul id="espreeso-menu-list" class="mt-3 pl-0"></ul>` 안에 삽입해야 한다.
// - [x] 총 메뉴 갯수를 count 하여 상단에 보여준다.
// - [x] 메뉴가 추가되고 나면, input 은 빈 값으로 초기화한다.
// - [x] 사용자 입력 값이 빈 값이라면 추가되지 않는다.

// TODO 메뉴 수정
// - [x] 메뉴의 수정 버튼 클릭 이벤트를 받고, 메뉴 수정하는 모달창(prompt)이 뜬다.
// - [x] 모달창에서 신규메뉴명을 입력 받고, 확인버튼을 누르면 메뉴가 수정된다.


// TODO 메뉴 삭제
// - [x] 메뉴 삭제 버튼 클릭 이벤트를 받고, 메뉴 삭제 컨펌(confirm) 모달창이 뜬다.
// - [x] 확인 버튼을 클릭하면 메뉴가 삭제된다.
// - [x] 총 메뉴 갯수를 count 하여 상단에 보여준다.

// 얻게 된 인사이트
// 1. 이벤트 위임을 어떻게 할 수 있는지 알게됨.
// 2. 요구사항을 전략적으로 접근하는 방법, 단계별로 세세하게 나누는 것이 중요하다는 것을 알게 됨.
// 3. DDM 요소를 가져올 때는 $표시를 써서 변수처럼 사용할 수 있는게 좋았음.
// 4. 새롭게 알게 된 매서드 innerText, innerHTML, 총개수 ($), insertAdjacentHTML, closest, e.target ...
// 5. 웹 개발시, 요구사항들이 비슷한 경우가 많은데 요구사항별 자주 사용되는 매서드, 기능들을 익히게 되었음.

-------------------------------------------------------------------------------------------------

//Step2 카페의 메뉴판 여러개 만들기
// TODO localStorag Read & Write
// -[ ] localStorage에 데이터를 저장한다.
    -[ ] 메뉴를 추가할 때 
    -[ ] 메뉴를 수정할 때 
    -[ ] 메뉴를 삭제할 때 
// -[ ] localStorage에 있는 데이터를 읽어온다. -> 새로고침해도 데이터가 남아있게 한다.

// TODO 카테고리별 메뉴판 관리
// -[ ] 에스프레소 메뉴판 관리
// -[ ] 프라푸치노 메뉴판 관리
// -[ ] 블렌디드 메뉴판 관리 
// -[ ] 티바나 메뉴판 관리 
// -[ ] 디저트 메뉴판 관리

// TODO 페이지 접근시 최초 데이터 Read & Reading
// -[ ] 페이지에 최초로 로딩될 때 localStorage에 에스프레소 메뉴를 읽어온다.
// -[ ] 에스프레소 메뉴가 먼저 보이게 한다. 

// TODO 
// -[ ] 품절 상태인 경우를 보여줄 수 있게, 품절 버튼을 추가하고 sold-out class를 추가하여 상태를 변경한다.
// -[ ] 품절 버튼을 추가한다.
// -[ ] 품절 버튼을 클릭하면, localStorag에 상태값이 저장된다.
// -[ ] 클릭이벤트에서 가장 가까운 li 태그의 class 속성 값에 sold-out을 추가한다.

-------------------------------------------------------------------------------------------------

localStorage : 브라우저에 저장할 수 있는 저장소, url별로 저장됨

    localStorage.setItem("key","value");    //저장소에 key와 value 저장하기
    localStorage.getItem("key");            //저장소에 있는 value 값 가져오기
